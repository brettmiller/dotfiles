[user]
  name = Brett Miller
  email = github@shadowed.net

[includeIf "gitdir:~/code/github.com/vitalsource/**"]
  path = ~/.gitconfig_local

[credential]
  helper = osxkeychain
[push]
  default = simple
[alias]
  a = add
  b = branch
  bsu = branch --set-upstream-to
  br = ls-remote --heads
  c = commit
  cm = commit -m
  cam = commit -am
  ce = commit --allow-empty -m 'empty commit'
  cl = clone
  co = checkout
  cob = checkout -b
  sw = switch
  swc = switch -c
  com = checkout master
  cop = checkout production
  default = "!funct() { git symbolic-ref refs/remotes/origin/HEAD | awk -F'/' '{print $NF}'; }; funct" # print default branch
  cod = "!git switch $(git default)" # checkout default branch
  swd = "!git switch $(git default)" # checkout default branch
  d = diff
  dc = diff --cached
  dy = "!GIT_EXTERNAL_DIFF=$HOME/scripts/git_diff-y.sh git diff"     # side-by-side diff using `colordiff`
  ds = "!GIT_EXTERNAL_DIFF=$HOME/scripts/git_diff-y.sh git diff"     # side-by-side diff using `colordiff`
  diff-y = "!GIT_EXTERNAL_DIFF=$HOME/scripts/git_diff-y.sh git diff" # side-by-side diff using `colordiff`
  dmb = "!git b --merged | grep -E -v \"$(git default)|main|master\" | xargs git b -d" # locally delete merged branches excluding 'default', main, master
  merged-on-origin = "!git branch --all --merged $(git symbolic-ref refs/remotes/origin/HEAD --short) | grep -v $(git default) | grep -v HEAD | grep "remotes/origin" | cut -d/ -f 3-"
  delete-merged-on-origin = "!git branch --all --merged $(git symbolic-ref refs/remotes/origin/HEAD --short) | grep -v $(git default) | grep -v HEAD | grep "remotes/origin" | cut -d/ -f 3- | xargs -n 1 git push --delete origin"
  l = log
  p = push
  pl = pull
  ra = remote add
  rr = remote rm
  s = status
  st = stash
  top = rev-parse --show-toplevel
  #check merge w/o merging - https://stackoverflow.com/a/6283843
  merge-dry = "!f() { git merge-tree --merge-base $(git merge-base $1 $2) $1 $2; }; f"  # $1=base, $2=branch to merge
  merge-dry-full = "!f() { git merge-tree $(git merge-base $1 $2) $1 $2; }; f" # $1=base, $2=branch to merge - https://stackoverflow.com/a/6283843
  # https://tekin.co.uk/2020/06/jump-from-a-git-commit-to-the-pr-in-one-command
  merge-commits = "!funct() { git log --merges --reverse --oneline --ancestry-path $1..origin | grep \"Merge pull request\"; }; funct"
  pr-number = "!funct() { git merge-commits $1 | head -n1 | sed -n \"s/^.*Merge pull request #\\\\s*\\\\([0-9]*\\\\).*$/\\\\1/p\"; }; funct"
  web-url = "!funct() { git config remote.origin.url | sed -e\"s/git@/https:\\/\\//\" -e\"s/\\.git$//\" | sed -E \"s/(\\/\\/[^:]*):/\\1\\//\"; }; funct"
  pr = "!funct() { open \"$(git web-url)/pull/$(git pr-number $1)\" ;}; funct"  # given a commit hash, uses 3 prior functions to find and open the github pr containing it
  # end
  listalias = config --get-regexp alias
  aliaslist = config --get-regexp alias
[diff]
  compactionHeuristic = true
  tool = vscode
[difftool "vscode"]
  cmd = code --wait --diff $LOCAL $REMOTE
[pager]
  branch = false
[pull]
  ff = only
[core]
  attributesfile = /Users/bmille2/.gitattributes
[init]
  defaultBranch = main
[fetch]
  prune = true
