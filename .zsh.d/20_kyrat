# If we have it use kyrat (SSH wrapper script that brings your dotfiles with you on Linux and OSX) for ssh

CLOUD_SDK_PATH="${HOMEBREW_PREFIX}/Caskroom/google-cloud-sdk/latest/google-cloud-sdk"

if [[ -z $SSH_CONNECTION ]] && command -v kyrat >/dev/null 2>&1; then

# Aliasing `kyrat` to overrided `ssh` isn't really useful any more. Most ssh sessions where
# `kyrat` is wanted are via `gcloud compute ssh` and the "hack" below deals with that.
#
#  alias ssh='kyrat'
#  #alias ssh="${HOME}/repos/kyrat/bin/kyrat"
#
#  # use sssh for standard ssh
#  if [[ -x /usr/local/bin/ssh ]]; then
#    alias sssh='/usr/local/bin/ssh'
#  else
#   alias sssh='/usr/bin/ssh'
#  fi

  # make kyrat work with `gcloud compute ssh` if we aren't in an ssh session and have kyrat and gcloud
  if command -v gcloud >/dev/null 2>&1 && ! grep -q kyrat ${CLOUD_SDK_PATH}/lib/googlecloudsdk/command_lib/util/ssh/ssh.py; then
    cp -a ${CLOUD_SDK_PATH}/lib/googlecloudsdk/command_lib/util/ssh/ssh.py{,.orig}
    sed -i.orig -e "s/\('ssh.*'\): 'ssh'/\1: 'kyrat'/g" ${CLOUD_SDK_PATH}/lib/googlecloudsdk/command_lib/util/ssh/ssh.py
  fi
else
  if ! command -v kyrat >/dev/null 2>&1; then
    alias kyrat='echo "kyrat not installed or not in PATH"'
  fi
fi
